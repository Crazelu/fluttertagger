name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  flutter_version: "3.22.x"
  java_version: "17.x"

jobs:
  format-and-lint:
    name: Linting and tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java_version }}
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.flutter_version }}
      - name: Install dependencies
        run: flutter pub get
      - name: Format code
        run: dart format . --set-exit-if-changed
      - name: Lint analysis
        run: flutter analyze --no-pub
      - name: Run tests
        run: flutter test --coverage
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          file: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

  build-android:
    name: Build android client
    needs: [format-and-lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java_version }}
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.flutter_version }}
      - name: Install dependencies
        run: flutter pub get
        working-directory: ./example
      - name: Build
        run: flutter build apk
        working-directory: ./example